1.
RAII - Resource Acquisition Is Initialization – захват ресурса есть инициализация. Смысл в том, что что с помощью каких-нибудь механизмов получение 
некоторого ресурса неразрывно совмещается с инициализацией, а освобождение — с уничтожением объекта. Если кратко, то в конструкторе объект получает 
доступ к чему-либо и сохраняет описатель этого ресурса в закрытый члена класса, а при вызове деструктура этот ресурс освобождается.

2. 
Конструктор — это особый тип метода класса, который автоматически вызывается при создании объекта этого же класса. Конструкторы обычно 
используются для инициализации переменных-членов класса значениями, которые предоставлены по умолчанию/пользователем. Конструктор, который не имеет параметров 
или содержит параметры со значениями по умолчанию, называется конструктором по умолчанию. Задать его можно в части класса public: Class_name() = default
Конструктор копирования - специальный конструктор, применяемый для создания нового объекта как копии уже существующего объекта.
Деструктор - метод  класса, который выполняет освобождение использованных объектом ресурсов и удаление нестатических переменных объекта. Деструктор не имеет 
возвращаемого значения и не принимает параметров. Каждый класс может иметь только один деструктор. Задается деструктор в области public: 
~Class_name(){delete arg1,..; delete[] arg,..; (для массива)} Если деструктор не определен, то компилятор предоставит его по умолчанию.
Геттер - метод  класса, который позволяет вернуть поле из класса
Сеттер - метод  класса, который позволяет менять значения поля класса

3.
Поля класса принято делать приватными, чтобы простые пользователи не могли самостоятельно менять значение полей. Также инкапсулированные классы упрощают программу.
Константный метод — это метод, который гарантирует, что не будет изменять объект или вызывать неконстантные методы класса.
Чтобы сделать метод константным, надо добавить слово const в его объявление.

4. 
Когда код становится слишком большим, его трудно читать в одном файле, поэтому разделять удобнее. Еще это может ускорить время компиляции функций.
Файл .срр — это файл, внутри которого описывается последовательность вызовов функций и их действия.
Файл .h — это файл, который содержит общее описание используемых функций или просто названия переменных. Заголовочные файлы 
предназначены для совместного использования, а файлы кода (.срр) - нет.

5. Какие три этапа проходит код при превращении в исполняемый файл? Расскажите, что в них происходит.
Препроцессинг
Эту операцию осуществляет текстовый препроцессор.На этом этапе происходит замена комментариев пустыми строками, 
текстовое включение файлов (#include), макроподстановки (#define) и обработка директив условной компиляции (#if,#else и т.д)
Компиляция
Полученный на прошлом шаге код без директив компилятор преобразует в ассемблерный код. Затем ассемблер переводит код в машинный и
сохраняет его объектном файле
Сборка
Происходит связывание воедино всех объектных файлов проекта. На выходе получается один рабочий файл.
