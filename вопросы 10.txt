1)
Вариативный шаблон — шаблон с заранее неизвестным числом аргументов, которые формируют 
один или несколько так называемых пакетов параметров. Вариативный шаблон позволяет использовать 
параметризацию типов там, где требуется оперировать произвольным количеством аргументов, каждый из которых имеет произвольный тип.

2)
Ообработать по очереди все параметры пакета можно с помощью оператора многоточия (...)
(когда он встречается слева от имени параметра, он объявляет пакет параметров) Справа от шаблона 
или аргумента вызова функции, оператор (...) распаковывает пакеты параметров в отдельные 
аргументы. На практике использование оператора с многоточием в коде приводит к тому, 
что все выражение, предшествующее многоточию, повторяется для каждого последующего 
аргумента, распакованного из пакета аргументов, с выражениями, разделенными запятыми.

3)
При помощи функции:
template<typename... Types>
auto get_amount_of_arguments(Types... arguments) {
    return sizeof...(arguments);
}

4)
	1) Унарная левая свёртка: ... OPERATOR args <=> ((arg1 OP arg2) OP arg3) OP arg4
	2) Унарная правая свёртка: args OPERATOR ... <=> arg1 OP (arg2 OP (arg3 OP arg4))
	3) Бинарная левая свёртка: special_arg OPERATOR ... OPERATOR args <=> ((special_arg OP arg1) OP arg2) OP arg3
	4) Бинарная правая свёртка: args OPERATOR ... OPERATOR special_arg <=> arg1 OP (arg2 OP (arg3 OP special_arg))

5) Как реализован статический полиморфизм? Динамический полиморфизм?
Когда инструменты используются во время компиляции - это статический полиморфизм, а когда в процессе выполнения самой программы - динамический. 
Тогда очевидно, что статический полиморфизм реализован через шаблоны, а динамический - через классическое наследование и виртуальные функции.