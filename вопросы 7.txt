

1)
два типа отношений это "is a" и "is implemented with". По своей сути первый из них говорит, что дочерний класс является родительским (как например все мы люди). Второй вид
отношений говорит, что новый класс построен при помощи родительского (как например построитель графика должен использовать класс взятия информации).
is a - public; is implemented with - private;
2)
protected используется вметсо private, когда нам надо чтобы у дочернего класса был доступ к это секции.
3)
virtual дает возможность потомкам переопределить метод для себя
override переопределяет родительский метод
final помечает конец цепочки переопределения метода (т.е. запрещает переопределять метод далее)
4)
Чистая виртуальная функция это функция, которая не определена (virtual type function()=0;) У нее нет значения и вообще ничего кроме типа. Чистая виртуальная функция существует
лишь для того, чтобы ее позже переопределили. Абстрактный базовый класс - это класс который сам по себе не имеет практического применения, однако на его основе строятся другие
классы. В абстрактной классе содержатся чисто виртуальные функции.
5) 
Если класс потсроен на основе двух родительских классов, то может возникнуть ситуация, когда функции родительских классов будут конфликтовать друг с другом
(Я не помню, чтобы вы говорили про Java)